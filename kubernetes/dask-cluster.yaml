apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: devito-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: devito-server
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: devito-server
        image: devitoaks.azurecr.io/daks-base:v1
        command: ['/venv/bin/dask-scheduler']
        ports:
        - containerPort: 8786
          name: devito-server
        - containerPort: 8787
          name: daskdashboard
---
apiVersion: v1
kind: Service
metadata:
  name: devito-server
spec:
  type: LoadBalancer
  ports:
  - name: aaa
    port: 8786
    targetPort: 8786
  - name: bbb
    port: 8787
    targetPort: 8787
  selector:
    app: devito-server
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: devito-worker
spec:
  replicas: 15
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: devito-worker
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: devito-worker
        env:
        - name: PYTHONPATH
          value: /app
        - name: DEVITO_LANGUAGE
          value: "openmp"
        - name: OMP_PROC_BIND
          value: "TRUE"
        - name: "OMP_PLACES"
          value: "cores"
        - name: "OMP_NUM_THREADS"
          value: "2"
        image: devitoaks.azurecr.io/daks-base:v1
        command: ['/venv/bin/dask-worker', 'tcp://devito-server:8786', '--memory-limit', '4G', '--resources', 'tasks=1', '--no-nanny', '--nprocs', '1', '--nthreads', '1']
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 5G
            cpu: 2
          limits:
            memory: 5G
            cpu: 2